Mydata = read.csv(file.choose(), header = TRUE)
head(Mydata)
cor(Mydata)
cor(Mydata(1:11))
cor(Mydata[,1:10])
cor(Mydata[,2:10])
cor(Mydata[,2:11])
head(Mydata)
cor(Mydata[,2:4])
Summary(Mydata[,2])
boxplot(Mydata[,2])
boxplot(Mydata[,3])
boxplot(Mydata[,3:11])
boxplot(Mydata[2:51,2:11])
hist(Mydata[,3])
hist(Mydata[,3:11])
hist(Mydata[,4])
cor(Mydata[,3:11])
pairs(Mydata[,2:11])
cor(Mydata[2:51,3:11])
pairs(Mydata[2:51,2:11])
cor(Mydata[2:51,2:11])
cor(Mydata[2:51,2:11])
cor(Mydata[2:50,2:11])
View(Mydata)
cor(Mydata[1:50,2:11])
boxplot(Mydata[1:50,2:11])
pairs(Mydata[1:51,2:11])
cor(Mydata[1:50,2:11])
pairs(Mydata[1:50,2:11])
prcomp(Mydata[1:50,2:11])
prcomp(Mydata[1:50,2:11])
prcomp(Mydata[1:50, 3:11])
summary(prcomp(Mydata[1:50, 3:11]))
Mydata = read.csv(file.choose(), header = TRUE)
head(Mydata)
boxplot(Mydata[1:50,2:11])
pairs(Mydata[1:50,2:11])
cor(Mydata[1:50,2:11])
summary(prcomp(Mydata[1:50, 3:11]))
train-> Mydata[2:11, 1:50]
train<- Mydata[2:11, 1:50]
train<- Mydata[1:50, 2:11]
head(train)
tail(train)
import gbmFit1
import caret
library (caret)
library ('caret')
install.packages(caret)
install.packages('caret')
library(caret)
library(Metrics)
install.packages('metrics')
library(Metrics)
install.packages('Metrics')
library(Metrics)
gbmFit1<- train(as.factor(outcome1) ~ ., data = train[,2:10], method = "gbm", trControl = fitControl,verbose = FALSE)
gbmFit1<- train(as.factor(S1) ~ ., data = train[,2:10], method = "gbm", trControl = fitControl,verbose = FALSE)
gbmFit1<- train(as.factor(train[S1,]) ~ ., data = train[,2:10], method = "gbm", trControl = fitControl,verbose = FALSE)
gbmFit1<- train(as.factor(train[1,]) ~ ., data = train[,2:10], method = "gbm", trControl = fitControl,verbose = FALSE)
gbmFit1<- train(as.factor(train[2:10,]) ~ ., data = train[,1], method = "gbm", trControl = fitControl,verbose = FALSE)
gbmFit1<- train(train[,1] ~ ., data = train[,2:10], method = "gbm", trControl = fitControl,verbose = FALSE)
gbmFit1<- train(train[,1] ~ ., data = train[,2:10], method = "gbm", trControl = fitControl,verbose = FALSE)
gbmFit1<- train(train[,1] ~ ., data = train[,2:10], method = "gbm", trControl = 'fitControl',verbose = FALSE)
library("lavaan")
library("semPlot")
library("MASS")
attach(Mydata)
s1
S1
attach(train)
S1
model<- 'S1=~S2+S3+S4+S5+S6+S7+S8+S9+S10'
fit=cfa(model, data=train)
library("cfa")
install.packages('cfa')
library("cfa")
library(cfa)
install.packages('mcfa')
install.packages("C:/Users/Saisandeep/Downloads/cfa_0.9-3.tar.gz", repos = NULL, type = "source")
library(cfa)
fit=cfa(model, data=train)
fit=cfa(model)
fit=cfa(model)
model<- 'S1~S2+S3+S4+S5+S6+S7+S8+S9+S10'
fit=cfa(model)
model<- 'S1=~S2+S3+S4+S5+S6+S7+S8+S9+S10'
Mydata = read.csv(file.choose(), header = TRUE)
head(Mydata)
boxplot(Mydata[1:50,2:11])
pairs(Mydata[1:50,2:11])
cor(Mydata[1:50,2:11])
summary(prcomp(Mydata[1:50, 3:11]))
train<- Mydata[1:50, 2:11]
head(train)
tail(train)
install.packages('caret')
install.packages('Metrics')
library(caret)
library(Metrics)
gbmFit1<- train(train[,1] ~ ., data = train[,2:10], method = "gbm", trControl = fitControl,verbose = FALSE)
library(cfa)
library("lavaan")
library("semPlot")
library("MASS")
attach(Mydata)
attach(train)
model<- 'S1=~S2+S3+S4+S5+S6+S7+S8+S9+S10'
fit=cfa(model)
library(reshape)
library(plyr)
library(dplyr)
library(dplyr)
library()
library(dplyr)
library()
library(ggplot2)
# Load the Data
red_wine_data <- read.csv('C:/Users/Saisandeep/Documents/Udacity Data Analyst/EDA/project/wineQualityReds.csv', header = TRUE)
head(red_wine_data)
summary(red_wine_data)
table(red_wine_data$quality)
str(red_wine_data)
ggplot(aes(quality),data = red_wine_data) +
geom_histogram(breaks = c(2,3,4,5,6,7,8))+
geom_histogram(color =I('black'),fill = I('#099009'))+
ggtitle('pH distribution for White wine')
ggplot(aes(quality),data = red_wine_data) +
geom_histogram(breaks = c(2,3,4,5,6,7,8),color =I('black'),
fill = I('#099009'))+
ggtitle('pH distribution for White wine')
# Load the Data
red_wine_data <- read.csv('C:/Users/Saisandeep/Documents/Udacity Data Analyst/EDA/project/wineQualityReds.csv', header = TRUE)
head(red_wine_data)
summary(red_wine_data)
str(red_wine_data)
ggplot(aes(pH),data = red_wine_data) +
geom_histogram(color =I('black'),fill = I('#099009'))+
ggtitle('pH distribution for White wine')
ggplot(aes(alcohol),data = red_wine_data) +
geom_histogram(color =I('black'),fill = I('#099009'))+
ggtitle('Alcohol distribution for Red wine')
ggplot(aes(pH),data = red_wine_data) +
geom_histogram(color =I('black'),fill = I('#099009'))+
ggtitle('pH distribution for Red wine')
ggplot(aes(quality),data = red_wine_data) +
geom_histogram(breaks = c(2,3,4,5,6,7,8),color =I('black'),
fill = I('#099009'))+
ggtitle('Quality distribution for Red wine')
ggplot(aes(fixed.acidity),data = red_wine_data) +
geom_histogram(color =I('black'),fill = I('#099009'))+
ggtitle('Fixed Acidity distribution for Red wine')
ggplot(aes(volatile.acidity),data = red_wine_data) +
geogeom_histogram(color =I('black'),fill = I('#099009'))+
ggtitle('Volatile acidity distribution for Red wine')m_histogram()
ggplot(aes(volatile.acidity),data = red_wine_data) +
geogeom_histogram(color =I('black'),fill = I('#099009'))+
ggtitle('Volatile acidity distribution for Red wine')
ggplot(aes(volatile.acidity),data = red_wine_data) +
geom_histogram(color =I('black'),fill = I('#099009'))+
ggtitle('Volatile acidity distribution for Red wine')
ggplot(aes(citric.acid),data = red_wine_data) +
geom_histogram(color =I('black'),fill = I('#099009'))+
ggtitle('Citric Acid distribution for Red wine')
ggplot(aes(residual.sugar),data = red_wine_data) +
geom_histogram(color =I('black'),fill = I('#099009'))+
ggtitle('Residual Sugar distribution for Red wine')
ggplot(aes(chlorides),data = red_wine_data) +
geom_histogram(color =I('black'),fill = I('#099009'))+
ggtitle('Chlorides distribution for Red wine')
ggplot(aes(free.sulfur.dioxide),data = red_wine_data) +
geom_histogram(color =I('black'),fill = I('#099009'))+
ggtitle('SO2 distribution for Red wine')
ggplot(aes(total.sulfur.dioxide),data = red_wine_data) +
geom_histogram(color =I('black'),fill = I('#099009'))+
ggtitle('Total SO2 distribution for Red wine')
ggplot(aes(density),data = red_wine_data) +
geom_histogram(color =I('black'),fill = I('#099009'))+
ggtitle('Density distribution for Red wine')
ggplot(aes(sulphates),data = red_wine_data) +
geom_histogram(color =I('black'),fill = I('#099009'))+
ggtitle('Sulphates distribution for Red wine')
p5 <- ggplot(aes(free.sulfur.dioxide),data = red_wine_data) +
geom_histogram(color =I('black'),fill = I('#099009'))+
ggtitle('Free SO2 distribution for Red wine')
p4 <- ggplot(aes(total.sulfur.dioxide),data = red_wine_data) +
geom_histogram(color =I('black'),fill = I('#099009'))+
ggtitle('Total SO2 distribution for Red wine')
p1 <- ggplot(aes(quality),data = red_wine_data) +
geom_histogram(breaks = c(2,3,4,5,6,7,8),color =I('black'),
fill = I('#099009'))+
ggtitle('Quality distribution for Red wine')
p2 <- ggplot(aes(pH),data = red_wine_data) +
geom_histogram(color =I('black'),fill = I('#099009'))+
ggtitle('pH distribution for Red wine')
p3 <- ggplot(aes(alcohol),data = red_wine_data) +
geom_histogram(color =I('black'),fill = I('#099009'))+
ggtitle('Alcohol distribution for Red wine')
grid.arrange(p1,p2,p3,p4,p5,ncol=2)
library(gridExtra)
grid.arrange(p1,p2,p3,p4,p5,ncol=2)
set.seed(12883)
ggpairs(red_wine_data)
library(GGally)
ggpairs(red_wine_data)
ggpairs(red_wine_data)
ggplot(aes(x=alcohol), data =red_wine_data) +
geom_density(aes(fill = type))+
facet_wrap(~quality)+
ggtitle('Alcohol and  Quality Relationship')
ggplot(aes(x=alcohol), data =red_wine_data) +
geom_density()+
facet_wrap(~quality)+
ggtitle('Alcohol and  Quality Relationship')
ggplot(aes(x=alcohol,y=pH),data = red_wine_data) +
geom_jitter(alpha=1/10,,pch=21,cex=4)+
facet_wrap(~quality)+
scale_color_brewer(type = 'div')+
ggtitle('Alcohol and pH Relationship')
ggplot(aes(x=alcohol,y=density),
data = red_wine_data)+
geom_line(stat='summary',fun.y=median)+
ggtitle('Alcohol content across Wine types')
p1<-ggplot(aes(x=alcohol,y=total.sulfur.dioxide),
data = red_wine_data)+
geom_density(stat='summary',fun.y=median)
p2<-ggplot(aes(x=alcohol,y=free.sulfur.dioxide),
data = red_wine_data)+
geom_density(stat='summary',fun.y=median)
p3<-ggplot(aes(x=alcohol,y=chlorides),
data = red_wine_data)+
geom_density(stat='summary',fun.y=median)
grid.arrange(p1,p2,p3,ncol=2)
ggplot(aes(x = quality, y = free.sulfur.dioxide), data = red_wine_data) +
geom_point(alpha=1/4, position = 'jitter')+
ggtitle(' Free SO2 and  Quality Relationship')
ggplot(aes(x = quality, y = total.sulfur.dioxide), data = red_wine_data) +
geom_point(alpha=1/4, position = 'jitter')+
ggtitle(' Free SO2 and  Quality Relationship')
ggplot(aes(x = quality, y = total.sulfur.dioxide), data = red_wine_data) +
geom_point(alpha=1/4, position = 'jitter')+
ggtitle(' Total SO2 and  Quality Relationship')
b1<-ggplot(aes(x=total.sulfur.dioxide,y=sulphates),
data = red_wine_data)+
geom_density(stat='summary',fun.y=median)
b2<-ggplot(aes(x=total.sulfur.dioxide,y=residual.sugar),
data = red_wine_data)+
geom_density(stat='summary',fun.y=median)
grid.arrange(b1,b2,ncol=2)
s1<-ggplot(aes(x=pH,y=free.sulfur.dioxide),
data = red_wine_data)+
geom_line(stat='summary',fun.y=median)
s2<-ggplot(aes(x=pH,y=total.sulfur.dioxide),
data = red_wine_data)+
geom_line(stat='summary',fun.y=median)
grid.arrange(s1,s2,ncol=2)
t1<-ggplot(aes(x=pH,y=free.sulfur.dioxide),
data = red_wine_data)+
geom_line(stat='summary',fun.y=median)+
xlim(3.5,4.0)
t2<-ggplot(aes(x=pH,y=total.sulfur.dioxide),
data = red_wine_data)+
geom_line(stat='summary',fun.y=median)+
xlim(3.5,4.0)
grid.arrange(t1,t2,ncol=2)
t1<-ggplot(aes(x=pH,y=free.sulfur.dioxide),
data = red_wine_data)+
geom_line(stat='summary',fun.y=median)+
xlim(3.5,4.0)
t2<-ggplot(aes(x=pH,y=total.sulfur.dioxide),
data = red_wine_data)+
geom_line(stat='summary',fun.y=median)+
xlim(3.5,4.0)
grid.arrange(t1,t2,ncol=2)
ggplot(aes(x=alcohol,y=free.sulfur.dioxide),
data = red_wine_data)+
geom_line(stat='summary',fun.y=median)+
ggtitle('Alcohol and Free SO2 relationship')
ggplot(aes(x=pH),data =red_wine_data) +
geom_density()+
facet_wrap(~quality)+
ggtitle('pH values  relationship with Quality')
install.packages('knit')
install.packages('knitr')
install.packages("knitr")
install.packages('rprojroot')
install.packages('rmarkdown')
library(knitr)
library(rprojroot)
library(rmarkdown)
library(reshape)
library(plyr)
library(dplyr)
library(gridExtra)
library(ggplot2)
library(GGally)
library(knitr)
library(rprojroot)
library(rmarkdown)
install.packages('C:\Users\Saisandeep\Downloads\rprojroot_1.2.tar.gz')
install.packages('C:/Users/Saisandeep/Downloads/rprojroot_1.2.tar.gz')
install.packages("C:/Users/Saisandeep/Downloads/rprojroot_1.2.tar.gz", repos = NULL, type = "source")
install.packages("C:/Users/Saisandeep/Downloads/knitr_1.17.tar.gz", repos = NULL, type = "source")
install.packages(c("BH", "coda", "curl", "digest", "evaluate", "formatR", "geosphere", "ggmap", "git2r", "glmnet", "gtable", "Hmisc", "htmltools", "htmlwidgets", "httr", "jsonlite", "latticeExtra", "maps", "MASS", "Matrix", "maxLik", "mclust", "MCMCpack", "mnormt", "munsell", "quantreg", "R6", "Rcpp", "rstudioapi", "sandwich", "scales", "shiny", "sp", "SparseM", "TeachingDemos", "xtable", "zoo"))
install.packages(c("BH", "coda", "curl", "digest", "evaluate", "formatR", "geosphere", "ggmap", "git2r", "glmnet", "gtable", "Hmisc", "htmltools", "htmlwidgets", "httr", "jsonlite", "latticeExtra", "maps", "MASS", "Matrix", "maxLik", "mclust", "MCMCpack", "mnormt", "munsell", "quantreg", "R6", "Rcpp", "rstudioapi", "sandwich", "scales", "shiny", "sp", "SparseM", "TeachingDemos", "xtable", "zoo"))
install.packages(c("BH", "coda", "curl", "digest", "evaluate", "formatR", "geosphere", "ggmap", "git2r", "glmnet", "gtable", "Hmisc", "htmltools", "htmlwidgets", "httr", "jsonlite", "latticeExtra", "maps", "MASS", "Matrix", "maxLik", "mclust", "MCMCpack", "mnormt", "munsell", "quantreg", "R6", "Rcpp", "rstudioapi", "sandwich", "scales", "shiny", "sp", "SparseM", "TeachingDemos", "xtable", "zoo"))
install.packages(c("BH", "coda", "curl", "digest", "evaluate", "formatR", "geosphere", "ggmap", "git2r", "glmnet", "gtable", "Hmisc", "htmltools", "htmlwidgets", "httr", "jsonlite", "latticeExtra", "maps", "MASS", "Matrix", "maxLik", "mclust", "MCMCpack", "mnormt", "munsell", "quantreg", "R6", "Rcpp", "rstudioapi", "sandwich", "scales", "shiny", "sp", "SparseM", "TeachingDemos", "xtable", "zoo"))
install.packages(c("BH", "coda", "curl", "digest", "evaluate", "formatR", "geosphere", "ggmap", "git2r", "glmnet", "gtable", "Hmisc", "htmltools", "htmlwidgets", "httr", "jsonlite", "latticeExtra", "maps", "MASS", "Matrix", "maxLik", "mclust", "MCMCpack", "mnormt", "munsell", "quantreg", "R6", "Rcpp", "rstudioapi", "sandwich", "scales", "shiny", "sp", "SparseM", "TeachingDemos", "xtable", "zoo"))
install.packages(c("BH", "coda", "curl", "digest", "evaluate", "formatR", "geosphere", "ggmap", "git2r", "glmnet", "gtable", "Hmisc", "htmltools", "htmlwidgets", "httr", "jsonlite", "latticeExtra", "maps", "MASS", "Matrix", "maxLik", "mclust", "MCMCpack", "mnormt", "munsell", "quantreg", "R6", "Rcpp", "rstudioapi", "sandwich", "scales", "shiny", "sp", "SparseM", "TeachingDemos", "xtable", "zoo"))
install.packages("knitr")
setwd("~/Udacity Data Analyst/EDA")
install.packages('rprojroot')
install.packages('rmarkdown')
install.packages('knitr')
library(reshape)
install.packages(reshape)
install.packages(plyr)
install.packages(dplyr)
install.packages(gridExtra)
install.packages(ggplot2)
install.packages(GGally)
install.packages('reshape')
install.packages('plyr')
install.packages('dplyr')
install.packages('gridExtra')
install.packages('ggplot2')
install.packages('GGally')
install.packages('dplyr')
library(reshape)
library(plyr)
library(dplyr)
library(gridExtra)
library(ggplot2)
library(GGally)
library(knitr)
install.packages('knitr')
library(knitr)
install.packages("knitr")
library(knitr)
install.packages("C:/Users/Saisandeep/Downloads/knitr_1.17.tar.gz", repos = NULL, type = "source")
install.packages('evaluate')
install.packages('stringi')
install.packages('evaluate')
install.packages('knitr')
library(knitr)
library(rprojroot)
install.packages(‘backports’)
install.packages('backports')
library(rprojroot)
install.packages("backports")
library(backports)
install.packages("C:/Users/Saisandeep/Downloads/backports_1.1.1.tar.gz", repos = NULL, type = "source")
install_version("backports", version = "1.1.0")
require(devtools)
install_version("backports", version = "1.1.0")
install_version("backports", version = "1.1.1")
install.packages('backports')
devtools::install_github("r-pkgs/usethis")
install.packages('devtools')
require(devtools)
install.packages('backports')
library(rmarkdown)
install.packages('rmarkdown')
library(rprojroot)
install.packages('rprojroot')
install_version("backports", version = '1.1.1')
install_version("backports", version = '1.1.0')
install.packages('rmarkdown')
install.packages('rprojroot')
library(rprojroot)
library(rmarkdown)
red_wine_data <- read.csv('C:/Users/Saisandeep/Documents/Udacity Data Analyst/EDA/project/wineQualityReds.csv', header = TRUE)
head(red_wine_data)
summary(red_wine_data)
str(red_wine_data)
table(red_wine_data$quality)
p1 <- ggplot(aes(quality),data = red_wine_data) +
geom_histogram(breaks = c(2,3,4,5,6,7,8),color =I('black'),
fill = I('#099009'))+
ggtitle('Quality distribution for Red wine')
ggplot(aes(quality),data = red_wine_data) +
geom_histogram(breaks = c(2,3,4,5,6,7,8),color =I('black'),
fill = I('#099009'))+
ggtitle('Quality distribution for Red wine')
ggplot(aes(pH),data = red_wine_data) +
geom_histogram(color =I('black'),fill = I('#099009'))+
ggtitle('pH distribution for Red wine')
p2 <- ggplot(aes(pH),data = red_wine_data) +
geom_histogram(color =I('black'),fill = I('#099009'))+
ggtitle('pH distribution for Red wine')
summary(red_wine_data$pH)
p3 <- ggplot(aes(alcohol),data = red_wine_data) +
geom_histogram(color =I('black'),fill = I('#099009'))+
ggtitle('Alcohol distribution for Red wine')
ggplot(aes(fixed.acidity),data = red_wine_data) +
geom_histogram(color =I('black'),fill = I('#099009'))+
ggtitle('Fixed Acidity distribution for Red wine')
ggplot(aes(residual.sugar),data = red_wine_data) +
geom_histogram(color =I('black'),fill = I('#099009'))+
ggtitle('Residual Sugar distribution for Red wine')
p1 <- ggplot(red_wine_data, aes(x = volatile.acidity)) +
geom_histogram(binwidth = 0.01) +
labs(x = 'Volatile Acidity (g/L)', y = 'Count',
title = "Volatile acidity distribution")
p2 <- ggplot(red_wine_data, aes(y = volatile.acidity, x = 1)) +
geom_boxplot(color = 'blue') +
geom_jitter(aes(x = 1, y = volatile.acidity), alpha = 0.3) +
labs(y = 'Volatile Acidity (g/L)', x = '',
title = "Volatile acidity distribution") +
coord_flip()
grid.arrange(p1, p2)
ggplot(aes(Quality (Rating)),data = red_wine_data) +
geom_histogram(breaks = c(2,3,4,5,6,7,8),color =I('black'),
fill = I('#099009'))+
ggtitle('Quality distribution for Red wine')
ggplot(aes(quality),data = red_wine_data) +
geom_histogram(breaks = c(2,3,4,5,6,7,8),color =I('black'),
fill = I('#099009'))+
ggtitle('Quality distribution for Red wine')
ggplot(aes(quality),data = red_wine_data) +
geom_histogram(breaks = c(2,3,4,5,6,7,8),color =I('black'),
fill = I('#099009'))+
ggtitle('Quality distribution for Red wine') +
labs(x = Quality (rating))
ggplot(aes(quality),data = red_wine_data) +
geom_histogram(breaks = c(2,3,4,5,6,7,8),color =I('black'),
fill = I('#099009'))+
ggtitle('Quality distribution for Red wine') +
labs(x = 'Quality (rating)')
ggplot(aes(quality),data = red_wine_data) +
geom_histogram(breaks = c(2,3,4,5,6,7,8),color =I('black'),
fill = I('#099009'))+
ggtitle('Quality distribution for Red wine') +
labs(x = 'Quality (score between 0 to 10)')
p1 <- ggplot(aes(quality),data = red_wine_data) +
geom_histogram(breaks = c(2,3,4,5,6,7,8),color =I('black'),
fill = I('#099009'))+
ggtitle('Quality distribution for Red wine') +
labs(x = 'Quality (score between 0 to 10)')
ggplot(aes(pH),data = red_wine_data) +
geom_histogram(color =I('black'),fill = I('#099009'))+
ggtitle('pH distribution for Red wine')
p2 <- ggplot(aes(pH),data = red_wine_data) +
geom_histogram(color =I('black'),fill = I('#099009'))+
ggtitle('pH distribution for Red wine')
summary(red_wine_data$pH)
ggplot(aes(alcohol),data = red_wine_data) +
geom_histogram(color =I('black'),fill = I('#099009'))+
ggtitle('Alcohol distribution for Red wine')
ggplot(aes(alcohol),data = red_wine_data) +
geom_histogram(color =I('black'),fill = I('#099009'))+
ggtitle('Alcohol distribution for Red wine')+
labs(x = 'alcohol (% by volume)')
p3 <- ggplot(aes(alcohol),data = red_wine_data) +
geom_histogram(color =I('black'),fill = I('#099009'))+
ggtitle('Alcohol distribution for Red wine')+
labs(x = 'alcohol (% by volume)')
table(red_wine_data$quality)
ggplot(aes(quality),data = red_wine_data) +
geom_histogram(breaks = c(2,3,4,5,6,7,8),color =I('black'),
fill = I('#099009'))+
ggtitle('Quality distribution for Red wine') +
labs(x = 'Quality (score between 0 to 10)')
ggplot(aes(quality),data = red_wine_data) +
geom_histogram(breaks = c(2,3,4,5,6,7,8),color =I('black'),
fill = I('#099009'))+
ggtitle('Quality distribution for Red wine') +
labs(x = 'Quality (score between 0 to 10)')
table(red_wine_data$quality)
ggplot(aes(pH),data = red_wine_data) +
geom_histogram(color =I('black'),fill = I('#099009'))+
ggtitle('pH distribution for Red wine')
summary(red_wine_data$pH)
ggplot(aes(alcohol),data = red_wine_data) +
geom_histogram(color =I('black'),fill = I('#099009'))+
ggtitle('Alcohol distribution for Red wine')+
labs(x = 'alcohol (% by volume)')
s1 <- ggplot(aes(alcohol),data = red_wine_data) +
geom_histogram(color =I('black'),fill = I('#099009'))+
ggtitle('Alcohol distribution for Red wine')+
labs(x = 'alcohol (% by volume)')
s2 <- ggplot(red_wine_data, aes(y = alcohol, x = 1)) +
geom_boxplot(color = 'blue') +
geom_jitter(aes(x = 1, y = alcohol), alpha = 0.3) +
labs(y = 'alcohol (% by volume)', x = '',
title = "Alcohol distribution") +
coord_flip()
grid.arrange(s1, s2)
ggplot(aes(fixed.acidity),data = red_wine_data) +
geom_histogram(color =I('black'),fill = I('#099009'))+
ggtitle('Fixed Acidity distribution for Red wine')+
labs(x = 'Fixed Acidity (tartaric acid - g / dm^3)')
ggplot(aes(citric.acid),data = red_wine_data) +
geom_histogram(color =I('black'),fill = I('#099009'))+
ggtitle('Citric Acid distribution for Red wine')+
labs(x = 'Citric acid (g / dm^3)')
r1 <- ggplot(aes(citric.acid),data = red_wine_data) +
geom_histogram(color =I('black'),fill = I('#099009'))+
ggtitle('Citric Acid distribution for Red wine')+
labs(x = 'Citric acid (g / dm^3)')
r2 <- ggplot(red_wine_data, aes(y = citric.acid, x = 1)) +
geom_boxplot(color = 'blue') +
geom_jitter(aes(x = 1, y = citric.acid), alpha = 0.3) +
labs(y = 'Citric acid (g / dm^3)', x = '',
title = "Citric acid distribution") +
coord_flip()
grid.arrange(r1, r2)
ggplot(aes(residual.sugar),data = red_wine_data) +
geom_histogram(color =I('black'),fill = I('#099009'))+
ggtitle('Residual Sugar distribution for Red wine')+
labs(x = 'Residual sugar (g / dm^3)')
